// middleware-logging-auth.js

const express = require("express");
const app = express();

// ===== Logger Middleware =====
app.use((req, res, next) => {
  const timestamp = new Date().toISOString();
  console.log(`[${timestamp}] ${req.method} ${req.url}`);
  next(); // Move to next middleware or route handler
});

// ===== Auth Middleware =====
const authMiddleware = (req, res, next) => {
  const authHeader = req.headers["authorization"];

  if (!authHeader || !authHeader.startsWith("Bearer ")) {
    return res.status(401).json({ message: "Missing or invalid Authorization header" });
  }

  const token = authHeader.split(" ")[1];
  if (token !== "mysecrettoken") {
    return res.status(403).json({ message: "Forbidden: Invalid token" });
  }

  next(); // Token is valid
};

// ===== Public Route =====
app.get("/public", (req, res) => {
  res.json({ message: "Welcome to the public route!" });
});

// ===== Protected Route =====
app.get("/protected", authMiddleware, (req, res) => {
  res.json({ message: "Access granted to protected route!" });
});

// ===== Start Server =====
const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
