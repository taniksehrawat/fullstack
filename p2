// App.js
import React from "react";
import { configureStore, createSlice } from "@reduxjs/toolkit";
import { Provider, useDispatch, useSelector } from "react-redux";

// ================== Redux Slice ==================
const cartSlice = createSlice({
  name: "cart",
  initialState: {
    items: [],
  },
  reducers: {
    addToCart: (state, action) => {
      const existing = state.items.find((item) => item.id === action.payload.id);
      if (existing) {
        existing.quantity += 1;
      } else {
        state.items.push({ ...action.payload, quantity: 1 });
      }
    },
    removeFromCart: (state, action) => {
      state.items = state.items.filter((item) => item.id !== action.payload);
    },
    updateQuantity: (state, action) => {
      const { id, quantity } = action.payload;
      const item = state.items.find((i) => i.id === id);
      if (item && quantity > 0) item.quantity = quantity;
    },
  },
});

const { addToCart, removeFromCart, updateQuantity } = cartSlice.actions;

const store = configureStore({
  reducer: {
    cart: cartSlice.reducer,
  },
});

// ================== Product Component ==================
const ProductList = () => {
  const dispatch = useDispatch();
  const products = [
    { id: 1, name: "Laptop", price: 60000 },
    { id: 2, name: "Smartphone", price: 25000 },
    { id: 3, name: "Headphones", price: 3000 },
  ];

  return (
    <div style={{ marginBottom: "30px" }}>
      <h2>🛒 Products</h2>
      <div style={{ display: "flex", gap: "20px", flexWrap: "wrap" }}>
        {products.map((p) => (
          <div
            key={p.id}
            style={{
              border: "1px solid #ccc",
              borderRadius: "10px",
              padding: "15px",
              width: "200px",
              boxShadow: "2px 2px 10px rgba(0,0,0,0.1)",
            }}
          >
            <h3>{p.name}</h3>
            <p>💰 ₹{p.price}</p>
            <button onClick={() => dispatch(addToCart(p))}>Add to Cart</button>
          </div>
        ))}
      </div>
    </div>
  );
};

// ================== Cart Component ==================
const Cart = () => {
  const cartItems = useSelector((state) => state.cart.items);
  const dispatch = useDispatch();

  if (cartItems.length === 0) return <h3>🛍️ Your cart is empty</h3>;

  return (
    <div>
      <h2>🧾 Shopping Cart</h2>
      {cartItems.map((item) => (
        <div
          key={item.id}
          style={{
            borderBottom: "1px solid #ccc",
            marginBottom: "10px",
            paddingBottom: "10px",
          }}
        >
          <h4>{item.name}</h4>
          <p>Price: ₹{item.price}</p>
          <p>
            Quantity:{" "}
            <input
              type="number"
              min="1"
              value={item.quantity}
              onChange={(e) =>
                dispatch(
                  updateQuantity({ id: item.id, quantity: Number(e.target.value) })
                )
              }
              style={{ width: "60px" }}
            />
          </p>
          <button onClick={() => dispatch(removeFromCart(item.id))}>Remove</button>
        </div>
      ))}
      <h3>
        💵 Total: ₹
        {cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0)}
      </h3>
    </div>
  );
};

// ================== Main App ==================
function App() {
  return (
    <Provider store={store}>
      <div style={{ padding: "20px", fontFamily: "sans-serif" }}>
        <h1>🛍️ Redux Toolkit Shopping Cart</h1>
        <ProductList />
        <Cart />
      </div>
    </Provider>
  );
}

export default App;
